upstream mylfrontend {
  server unix:///home/mylfrontend/makeyourlaws.org/shared/tmp/sockets/puma.sock;
}


server {
    listen 80 default_server;
    proxy_set_header X-Forwarded-Proto $scheme;
  # server_name   ~^(www\.)?(?<domain>.+)$; # captures it to set $server_name
    server_name    makeyourlaws.org www.makeyourlaws.org makeyourlaws.com www.makeyourlaws.com makeyourlaws.net www.makeyourlaws.net makeyourlaw.org www.makeyourlaw.org makeyourlaw.com www.makeyourlaw.com makeyourlaw.net www.makeyourlaw.net makeourlaws.org www.makeourlaws.org makeourlaws.net www.makeourlaws.net makeourlaws.com www.makeourlaws.com;

    # IE6 doesn't support TLS, and post-POODLE, we can't support it without being vulnerable
    # So... it's final deprecation time.
    if ($http_user_agent ~ "MSIE 6.0" ) {
        rewrite ^ http://www.quirksmode.org/upgrade.html break;
    }

    # rewrite ^(.*)$ https://makeyourlaws.org$1 permanent;
    return 301  https://www.makeyourlaws.org$request_uri;
}

server {
  listen 443 ssl spdy;
  add_header Strict-Transport-Security "max-age=31536000;includeSubdomains;preload";
  # Create hashes:
  # openssl rsa -in my-key-file.key -outform der -pubout | openssl dgst -sha256 -binary | openssl enc -base64
  # openssl req -in my-signing-request.csr -pubkey -noout | openssl rsa -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64
  # openssl x509 -in my-certificate.crt -pubkey -noout | openssl rsa -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64
  # max-age=5184000  # 1 month
  # don't include subdomains, because subdomains have different keys
  add_header Public-Key-Pins 'pin-sha256="BhB3VHqeHW/wV4VzLvHVyHPYQMsX+e+QDWcuu3DITcE="; pin-sha256="PRAOmj2hweIBnsYGeJArzaq+5FFnPnhHPxKOr+h4q/A="; pin-sha256="zRPkcESJ2BCcwuOiGRBq+H27kv7oXz2LG3o61RZjs+c="; pin-sha256="k9UgoqF+HybLyoVnwAXqMiI8eQBWTVZUWHw89eNfRHY="; pin-sha256="Xd/e6L6S50STDHsxemzOCHUolevEXhSgYpRv7kMConM="; max-age=5184000; report-uri="https://www.makeyourlaws.org/hpkp-report"';

  location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
  location /ngx_pagespeed_global_statistics { allow 127.0.0.1; deny all; }
  location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
  location /pagespeed_console { allow 127.0.0.1; deny all; }
  location ~ ^/pagespeed_admin { allow 127.0.0.1; deny all; }
  location ~ ^/pagespeed_global_admin { allow 127.0.0.1; deny all; }

  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-Proto $scheme;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header  Host $http_host;
  proxy_set_header  X-Url-Scheme $scheme;
  proxy_redirect    off;
  proxy_max_temp_file_size 0;

  server_name makeyourlaws.org www.makeyourlaws.org makeyourlaws.com www.makeyourlaws.com makeyourlaws.net www.makeyourlaws.net makeyourlaw.org www.makeyourlaw.org makeyourlaw.com www.makeyourlaw.com makeyourlaw.net www.makeyourlaw.net;
  server_name_in_redirect off;

  root /home/mylfrontend/makeyourlaws.org/current/public;


  if ($host != 'www.makeyourlaws.org' ) {
    rewrite  ^/(.*)$  https://www.makeyourlaws.org/$1  permanent;
  }

  error_page 404 /404.html;
  error_page 422 /422.html;
  error_page 500 504 /500.html;
  error_page 502 /502.html;
  error_page 503 /503.html;

  client_max_body_size 50m;

  pagespeed LoadFromFile "https://www.makeyourlaws.org/assets/"
     "/home/mylfrontend/makeyourlaws.org/shared/public/assets/";
  pagespeed LoadFromFile "https://www.makeyourlaws.org/files/"
    "/home/mylfrontend/makeyourlaws.org/shared/public/files/";

  location ~* ^/(assets|files)/ {
  	# Per RFC2616 - 1 year maximum expiry
  	# http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
  	expires 1y;
  	add_header Cache-Control public;

  	proxy_cache global;
  	proxy_cache_valid  any 1h;
  	proxy_cache_use_stale updating;

  	# Some browsers still send conditional-GET requests if there's a
  	# Last-Modified header or an ETag header even if they haven't
  	# reached the expiry date sent in the Expires header.
  	#    add_header Last-Modified "";
  	#    add_header ETag "";
  	break;
  }

  location ~* ^/travis {
  	add_header    Cache-Control  private;

  	if ($http_referer ~* ^https://github.com/([^/]+/[^/]+)/tree/([^/]+)) {
  		set $repo $1;
  		set $branch $2;
  		rewrite ^/travis-image  https://travis-ci.org/$repo.png?branch=$branch;
  		break;
  	}

  	if ($http_referer ~* ^https://github.com/([^/]+/[^/]+)) {
  		set $repo $1;
  		rewrite ^/travis-image https://travis-ci.org/$repo.png;
  		rewrite ^/travis-link https://travis-ci.org/$repo;
  		break;
  	}
  	break;
  }

  location ~ \.flv$ {
      flv;
  }

  # location ~ \.(mp4|m4v|m4a)$ {
  #     hls;
  #     hls_fragment            5s;
  #     hls_buffers             10 10m;
  #     hls_mp4_buffer_size     1m;
  #     hls_mp4_max_buffer_size 5m;
  #     alias /var/video/;
  # }

  # If the file exists as a static file serve it directly without
  # running all the other rewite tests on it.
  # Also, if public/maintenance.html exists, serve that instead of anything.
  try_files $uri /maintenance.html @rails;

  # passenger_enabled on;
  location @rails {
      proxy_pass http://mylfrontend; # match the name of upstream directive which is defined above
  }

}
