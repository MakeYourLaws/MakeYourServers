---
- name: Check if rvm installed
  shell: "ls /usr/local/rvm/bin/rvm && echo 'yes' || echo 'no'"
  register: rvm_installed

- debug: var=rvm_installed.stdout

- name: Install git
  apt: pkg=git state=latest update_cache=yes
  sudo: yes

- name: Install gemrc and rvmrc
  copy:
    src: "../etc/{{item}}"
    dest: "../etc/{{item}}"
    owner: root
    group: rvm
    mode: 0644
  sudo: yes
  with_items:
    - rvmrc
    - gemrc

- name: Install rvm
  shell: '\curl -sSL https://get.rvm.io | bash -s stable'
  sudo: yes
  when: '"no" in rvm_installed.stdout'

- name: Ensure rvm always available in path
  lineinfile:
    state: present
    dest: /etc/bash.bashrc
    line: 'type rvm >/dev/null 2>/dev/null || echo ${PATH} | GREP_OPTIONS="" \grep "/usr/local/rvm/bin" > /dev/null || export PATH="${PATH}:/usr/local/rvm/bin"'
    insertbefore: BOF
    regexp: "^type rvm"
  sudo: yes

- name: Install rvm requirements
  shell: rvm requirements
  sudo: yes

- name: Fix rvm permissions
  shell: rvm fix-permissions
  sudo: yes

- name: Get rvm version
  shell: 'rvm -v | grep -Eo "rvm (.*) \(stable\)" | grep -Eo "[0-9.]+"'
  register: rvm_version

- name: Get latest rvm version
  shell: curl https://raw.githubusercontent.com/wayneeseguin/rvm/stable/VERSION
  register: latest_rvm_version

- debug: var=rvm_version.stdout
- debug: var=latest_rvm_version.stdout

- name: Update rvm if needed
  shell: rvm get stable
  sudo: yes
  when: '"yes" in rvm_installed.stdout and latest_rvm_version.stdout != rvm_version.stdout'

- name: Get rvm version
  shell: 'rvm -v | grep -Eo "rvm (.*) \(stable\)" | grep -Eo "[0-9.]+"'
  register: new_rvm_version

- debug: var=new_rvm_version.stdout

- name: Symlink rvm defaults to path
  file:
    src: "/usr/local/rvm/rubies/default/bin/{{item}}"
    dest: "/usr/local/bin/{{item}}"
    state: link
    owner: root
    group: rvm
  with_items:
    - erb
    - gem
    - irb
    - rake
    - rbx
    - ri
    - ruby
    - testrb
  sudo: yes

- name: Get gem version
  shell: gem -v
  register: gem_version

- debug: var=gem_version.stdout

- name: Update rubygems
  shell: gem update --system
  sudo: yes

- name: Get gem version
  shell: gem -v
  register: gem_version

- debug: var=gem_version.stdout

- name: Ensure local user is in rvm group
  user:
    name: "{{ lookup('env', 'USER') }}"
    groups: rvm
    append: yes
  sudo: yes
